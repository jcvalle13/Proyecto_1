<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>