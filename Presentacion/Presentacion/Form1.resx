<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>