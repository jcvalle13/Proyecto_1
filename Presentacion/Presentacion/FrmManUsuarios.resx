<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>