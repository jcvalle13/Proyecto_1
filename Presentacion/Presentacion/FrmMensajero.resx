<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Dw8Pj4FjbOz/TRbVjUYaMmQAAAAASUVORK5CYII=
</value>
  </data>
</root>